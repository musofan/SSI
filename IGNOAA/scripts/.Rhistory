xlab('Date') +
ylab('Temperature in Degrees Fahrenheit')
ggplot(core, aes(factor(date), temp)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Temperature in Degrees Fahrenheit') +
scale_color_discrete(name='Month')
ggplot(core, aes(factor(date), temp)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Temperature in Degrees Fahrenheit') +
scale_color_discrete(name='Month') +
stat_smooth()
ggplot(core, aes(factor(date), temp)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Temperature in Degrees Fahrenheit') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1))
ggplot(core, aes(factor(date), temp)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Temperature in Degrees Fahrenheit') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1), color='white')
ggplot(core, aes(factor(date), temp)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Temperature in Degrees Fahrenheit') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1), color='white', se=F)
ggplot(core, aes(factor(date), count)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Average Hourly Instagram Post Count') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1), color='white', se=F)
m0 = glm.nb(data=core, count~factor(month))
m1 = glm.nb(data=core, count~factor(month) + temp)
anova(m0,m1)
core$summer = core$month > 5
m0 = glm.nb(data=core, count~factor(summer))
m1 = glm.nb(data=core, count~factor(summer) + temp)
anova(m0,m1)
ggplot(core, aes(factor(date), count)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Range of Hourly Instagram Post Counts') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1), color='white', se=F)
core$date[min(core$count) > 100]
core[min(core$count) > 100,]
core[min(core$count) > 80,]
core[min(core$count) > 75,]
core[min(core$count) > 5,]
min(core$count)
core[core$date > min & core$date < max,]
core[core$month == 6,]
ggplot(core[core$month==6,], aes(factor(date), count)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Range of Hourly Instagram Post Counts') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1), color='white', se=F)
ggplot(core[core$month==7,], aes(factor(date), count)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Range of Hourly Instagram Post Counts') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1), color='white', se=F)
ggplot(core[core$month==7,], aes(factor(date), count)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Range of Hourly Instagram Post Counts') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1), color='white', se=F)
str(core$date)
ggplot(core[core$date > '2014-6-15' & core$date < '2014-6-25'], aes(factor(date), count)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Range of Hourly Instagram Post Counts') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1), color='white', se=F)
ggplot(core[core$date > '2014-6-15' & core$date < '2014-6-25',], aes(factor(date), count)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Range of Hourly Instagram Post Counts') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1), color='white', se=F)
subset(core, core$date == '2014-6-19' | core$date == '2014-6-20')
subset(core, core$date == '2014-7-19' | core$date == '2014-7-20')
subset(core, (core$date == '2014-7-19') | (core$date == '2014-7-20'))
levels(core$date)
subset(core, core$date == '2014-07-19' | core$date == '2014-07-20')
anova(glm.nb(data=core, count~factor(hour) + temp))
m0 = glm.nb(data=core, count~factor(hour))
m1 = glm.nb(data=core, count~factor(hour) + temp)
anova(m0,m1)
m0 = glm.nb(data=core, count~factor(summer))
m1 = glm.nb(data=core, count~factor(summer) + temp)
anova(m0,m1)
core$daylight = core$hour > 5 & core$hour < 19
core$waking = core$hour > 5 & core$hour < 23
m0 = glm.nb(data=core, count~daylight)
m1 = glm.nb(data=core, count~waking)
m2 = glm.nb(data=core, count~daylight + temperature)
m2 = glm.nb(data=core, count~daylight + temp)
m3 = glm.nb(data=core, count~waking + temp)
anova(m0,m2)
anova(m1,m3)
core$daylight = core$hour > 6 & core$hour < 19
core$waking = core$hour > 5 & core$hour < 23
m0 = glm.nb(data=core, count~daylight)
m1 = glm.nb(data=core, count~waking)
m2 = glm.nb(data=core, count~daylight + temp)
m3 = glm.nb(data=core, count~waking + temp)
anova(m0,m2)
anova(m1,m3)
m0 = glm.nb(data=core, count~factor(summer) + factor(hour))
m1 = glm.mb(data=core, count~factor(summer) + factor(hour) + temp)
m1 = glm.nb(data=core, count~factor(summer) + factor(hour) + temp)
anova(m0,m1)
m0 = glm.nb(data=core, count~factor(summer) * factor(hour))
m1 = glm.nb(data=core, count~factor(summer) * factor(hour) + temp)
anova(m0,m1)
core$high.volume.hours = core$hour > 9 & core$hour < 23
core$peak.hours = core$hour > 11 & core$hour < 20
m0 = glm.nb(data=core, count~daylight)
m1 = glm.nb(data=core, count~waking)
m2 = glm.nb(data=core, count~high.volume.hours)
m3 = glm.nb(data=core, count~peak.hours)
m4 = glm.nb(data=core, count~daylight + temp)
m5 = glm.nb(data=core, count~waking + temp)
m6 = glm.nb(data=core, count~high.volume.hours + temp)
m7 = glm.nb(data=core, count~peak.hours + temp)
anova(m0,m4)
anova(m1,m5)
anova(m2,m6)
anova(m3,m7)
exp(coef(glm.nb(data=core,count~factor(hour) + temp)))
m = glm.nb(data=core, count~factor(hour) + temp)
exp(coef(m$'temp'))
exp(coef(m)$'temp')
coef(m)
coef(m)$'temp'
m$'temp'
m$coef['temp']
exp(m$coef['temp'])
m = glm.nb(data=core[core$temp > 69,], count~factor(hour) + temp)
exp(m$coef['temp'])
m = glm.nb(data=core[core$temp > 65,], count~factor(hour) + temp)
exp(m$coef['temp'])
m0 = glm.nb(data=core[core$temp > 65,], count~temp)
m1 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + temp)
exp(m0$coef['temp'])
exp(m1$coef['temp'])
exp(m1$coef['temp'] * 20)
exp(m1$coef)
exp(m1$coef['temp'] * 20)
library(gmodels)
core = read.csv('/Users/damoncrockett/Dropbox/CALIT2DATA/IGNOAA/instagram_by_resolution.csv')
core$X = NULL
library(ggplot2)
qplot(core$count, binwidth=10)
library(MASS)
ggplot(core, aes(temp,count)) +
geom_point(alpha=0.2) +
stat_smooth(method=loess) +
ylab('Average Hourly Instagram Post Count') +
xlab('Temperature in Degrees Fahrenheit')
ggplot(core, aes(wind,count)) +
geom_point(alpha=0.2) +
stat_smooth(method=loess)
ggplot(core, aes(factor(sky),count)) +
geom_boxplot() +
ylab('Average Hourly Instagram Post Count') +
xlab('Proportion of Sky Covered by Clouds')
ggplot(core, aes(precipitation,count)) +
geom_point(alpha=0.2) +
stat_smooth()
ggplot(core, aes(factor(weekday), count)) + geom_boxplot() +
ylab('Average Hourly Instagram Post Count') +
xlab('Weekday')
core$weekend = core$weekday > 5
core$rain = core$precipitation > 0.0125
ggplot(core, aes(factor(hour), count)) + geom_boxplot() +
ylab('Average Hourly Instagram Post Count') +
xlab('Hour')
library(plyr)
by.weekday = ddply(core, c('weekday','hour'), summarize,
mean = mean(count))
ggplot(data=by.weekday, aes(x=factor(hour), y=mean, group=factor(weekday), color=factor(weekday))) +
geom_line() +
xlab('Hour') +
ylab('Average Hourly Instagram Post Count') +
scale_color_discrete(name="Weekday")
ggplot(core, aes(factor(month), count)) + geom_boxplot()
ggplot(core, aes(factor(hour), count)) + geom_boxplot() +
ylab('Average Hourly Instagram Post Count') +
xlab('Hour')
ggplot(core, aes(factor(hour), temp)) + geom_boxplot() +
ylab('Average Temperature in Degrees Fahrenheit') +
xlab('Hour')
ggplot(core, aes(factor(date), temp)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Temperature in Degrees Fahrenheit') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1), color='white', se=F)
ggplot(core, aes(factor(date), count)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Range of Hourly Instagram Post Counts') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1), color='white', se=F)
core$summer = core$month > 5
ggplot(core[core$month==7,], aes(factor(date), count)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Range of Hourly Instagram Post Counts') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1), color='white', se=F)
core$daylight = core$hour > 6 & core$hour < 19
core$waking = core$hour > 5 & core$hour < 23
core$high.volume.hours = core$hour > 9 & core$hour < 23
core$peak.hours = core$hour > 11 & core$hour < 20
install.packages('gmodels')
library(gmodels)
CrossTable(core$rain, core$hour, expected=TRUE)
CrossTable(core$hour, core$rain, expected=TRUE)
CrossTable(core$weekday, core$rain, expected=TRUE)
core$sunday = core$weekday == 7
m0 = glm.nb(data=core, count~sunday)
m1 = glm.nb(data=core, count~sunday+rain)
anova(m0,m1)
CrossTable(core$month, core$rain, expected=TRUE)
core$april = core$month == 4
m0 = glm.nb(data=core,count~month)
m1 = glm.nb(data=core,count~april)
m2 = glm.nb(data=core,count~month+rain)
m3 = glm.nb(data=core,count~april+rain)
anova(m0,m2)
anova(m1,m3)
summary(glm.nb(data=core, count~april))
m0 = glm.nb(data=core,count~temp)
m1 = glm.nb(data=core,count~temp+rain)
anova(m0,m1)
CrossTable(factor(core$sky), core$rain, expected=TRUE)
m0 = glm.nb(data=core,count~factor(sky))
m1 = glm.nb(data=core,count~factor(sky)+rain)
anova(m0,m1)
summary(m1)
anova(m0,m1)
m2 = glm.nb(data=core,count~rain)
exp(m1$coef['rain'])
exp(m2$coef['rain'])
m0 = glm.nb(data=core,count~factor(sky))
m1 = glm.nb(data=core,count~factor(sky)+rain)
m2 = glm.nb(data=core,count~rain)
exp(m1$coef['rain'])
m1$coef
exp(m1$coef['rainTRUE'])
exp(m2$coef['rainTRUE'])
summary(glm.nb(data=core,count~daylight*rain))
summary(glm.nb(data=core,count~waking*rain))
summary(glm.nb(data=core,count~high.volume.hours*rain))
summary(glm.nb(data=core,count~peak.hours*rain))
by.rain = ddply(core, c('rain','waking'), summarize,
mean = mean(count))
ggplot(data=by.rain, aes(x=rain, y=mean, group=waking, color=waking)) +
geom_line()
summary(glm.nb(data=core,count~daylight*temp))
summary(glm.nb(data=core,count~waking*temp))
summary(glm.nb(data=core,count~high.volume.hours*temp))
summary(glm.nb(data=core,count~peak.hours*temp))
summary(glm.nb(data=core,count~summer*temp))
summary(glm.nb(data=core,count~month*temp))
summary(glm.nb(data=core,count~weekday*temp))
summary(glm.nb(data=core,count~waking*temp))
summary(glm.nb(data=core,count~high.volume.hours*temp))
summary(glm.nb(data=core,count~peak.hours*temp))
summary(glm.nb(data=core,count~summer*temp))
summary(glm.nb(data=core,count~month*temp))
summary(glm.nb(data=core,count~weekday*temp))
by.waking = ddply(core, c('waking'), summarize,
mean = mean(count))
ggplot(data=by.waking, aes(x=temp, y=mean, group=waking, color=waking)) +
geom_line()
by.waking = ddply(core, c('waking','temp'), summarize,
mean = mean(count))
ggplot(data=by.waking, aes(x=temp, y=mean, group=waking, color=waking)) +
geom_line()
by.waking
ggplot(data=by.waking, aes(x=temp, y=mean, group=waking, color=waking)) +
stat_smooth()
by.waking = ddply(core, c('waking','temp'), summarize,
count = mean(count))
ggplot(data=by.waking, aes(x=temp, y=mean, group=waking, color=waking)) +
stat_smooth()
ggplot(data=by.waking, aes(x=temp, y=count, group=waking, color=waking)) +
stat_smooth()
by.summer = ddply(core, c('summer','temp'), summarize,
count = mean(count))
ggplot(data=by.summer, aes(x=temp, y=count, group=summer, color=summer)) +
stat_smooth()
by.month = ddply(core, c('month','temp'), summarize,
count = mean(count))
ggplot(data=by.month, aes(x=temp, y=count, group=month, color=month)) +
stat_smooth()
ggplot(data=by.month, aes(x=temp, y=count, group=factor(month), color=factor(month))) +
stat_smooth()
ggplot(data=by.month, aes(x=temp, y=count, group=factor(month), color=factor(month))) +
stat_smooth(se=F)
ggplot(data=by.month, aes(x=temp, y=count, group=factor(month), color=factor(month))) +
stat_smooth(se=F,method=lm)
ggplot(data=by.waking, aes(x=temp, y=count, group=waking, color=waking)) +
stat_smooth(se=F,method=lm)
ggplot(data=by.waking, aes(x=temp, y=count, group=waking, color=waking)) +
stat_smooth(se=F,method=loess)
ggplot(data=by.waking, aes(x=temp, y=count, group=waking, color=waking)) +
stat_smooth(se=F,method=lm)
ggplot(data=by.waking, aes(x=temp, y=count, group=waking, color=waking)) +
stat_smooth(se=F)
ggplot(data=by.waking, aes(x=temp, y=count, group=waking, color=waking)) +
stat_smooth()
by.rain = ddply(core, c('rain','waking'), summarize,
mean = mean(count))
ggplot(data=by.rain, aes(x=rain, y=mean, group=waking, color=waking)) +
geom_line()
by.rain = ddply(core, c('rain','waking'), summarize,
count = mean(count))
ggplot(data=by.rain, aes(x=rain, y=count, group=waking, color=waking)) +
geom_line()
summary(glm.nb(data=core,count~daylight*rain))
summary(glm.nb(data=core,count~waking*rain))
summary(glm.nb(data=core,count~high.volume.hours*rain))
summary(glm.nb(data=core,count~peak.hours*rain))
summary(glm.nb(data=core,count~summer*rain))
summary(glm.nb(data=core,count~month*rain))
summary(glm.nb(data=core,count~weekday*rain))
by.weekday = ddply(core, c('rain','weekday'), summarize,
count = mean(count))
ggplot(data=by.rain, aes(x=rain, y=count, group=weekday, color=weekday)) +
geom_line()
by.weekday = ddply(core, c('weekday','rain'), summarize,
count = mean(count))
ggplot(data=by.weekday, aes(x=rain, y=count, group=weekday, color=weekday)) +
geom_line()
ggplot(data=by.weekday, aes(x=rain, y=count, group=factor(weekday), color=factor(weekday))) +
geom_line()
str(core)
CrossTable(core$weekday,core$sky,expected=1)
CrossTable(core$factor(weekday),core$factor(sky),expected=1)
CrossTable(core$weekday,core$sky,expected=1)
CrossTable(core$hour,core$sky,expected=1)
m0 = glm.nb(data=core,count~hour+weekday)
m1 = glm.nb(data=core,count~hour+weekday+factor(sky))
anova(m0,m1)
m0 = glm.nb(data=core,count~hour+weekday)
m1 = glm.nb(data=core,count~hour+weekday+sky)
anova(m0,m1)
str(core)
summary(glm.nb(data=core,count~month*sky))
summary(glm.nb(data=core,count~month*sky))
summary(glm.nb(data=core,count~factor(month)*sky))
m0 = glm.nb(data=core,count~factor(hour)+factor(weekday))
m1 = glm.nb(data=core,count~factor(hour)+factor(weekday)+sky)
anova(m0,m1)
m0 = glm.nb(data=core,count~factor(hour)+factor(weekday))
m1 = glm.nb(data=core,count~factor(hour)+factor(weekday)+sky)
anova(m0,m1)
summary(glm.nb(data=core,count~factor(month)*sky))
summary(glm.nb(data=core,count~summer*sky))
summary(glm.nb(data=core,count~daylight*sky))
summary(glm.nb(data=core,count~waking*sky))
summary(glm.nb(data=core,count~high.volume.hours*sky))
summary(glm.nb(data=core,count~peak.hours*sky))
summary(glm.nb(data=core,count~factor(weekday)*sky))
summary(glm.nb(data=core,count~factor(hour)*sky))
summary(glm.nb(data=core,count~factor(month)*sky))
summary(glm.nb(data=core,count~summer*sky))
summary(glm.nb(data=core,count~daylight*sky))
summary(glm.nb(data=core,count~waking*sky))
summary(glm.nb(data=core,count~high.volume.hours*sky))
summary(glm.nb(data=core,count~peak.hours*sky))
summary(glm.nb(data=core,count~factor(weekday)*sky))
summary(glm.nb(data=core,count~factor(hour)*sky))
by.sky = ddply(core, c('sky','daylight'), summarize,
count = mean(count))
ggplot(data=by.sky, aes(x=sky, y=count, group=daylight, color=daylight)) +
geom_line()
ggplot(data=by.sky, aes(x=sky, y=count, group=daylight, color=daylight)) +
stat_smooth()
ggplot(data=by.sky, aes(x=sky, y=count, group=daylight, color=daylight)) +
stat_smooth(method=lm)
ggplot(data=by.sky, aes(x=sky, y=count, group=daylight, color=daylight)) +
stat_smooth(method=lm,se=F)
by.sky = ddply(core, c('sky','month'), summarize,
mean = mean(count))
ggplot(data=by.sky, aes(x=sky, y=mean, group=month, color=month)) +
geom_line()
ggplot(data=by.sky, aes(x=sky, y=mean, group=factor(month), color=factor(month))) +
stat_smooth(method=lm,se=F)
by.sky = ddply(core, c('sky','weekday'), summarize,
count = mean(count))
ggplot(data=by.sky, aes(x=sky, y=mean, group=factor(weekday), color=factor(weekday))) +
stat_smooth(method=lm,se=F)
by.sky = ddply(core, c('sky','weekday'), summarize,
count = mean(count))
ggplot(data=by.sky, aes(x=sky, y=count, group=factor(weekday), color=factor(weekday))) +
stat_smooth(method=lm,se=F)
m0 = glm.nb(data=core,count~factor(weekday))
m1 = glm.nb(data=core,count~factor(weekday)+sky)
anova(m0,m1)
m1 = glm.nb(data=core,count~factor(weekday)+factor(sky))
anova(m0,m1)
summary(glm.nb(data=core,count~factor(month)*sky))
m0 = glm.nb(data=core,count~factor(month))
m1 = glm.nb(data=core,count~factor(month)+sky
anova(m0,m1)
m0 = glm.nb(data=core,count~factor(month))
m1 = glm.nb(data=core,count~factor(month)+sky
anova(m0,m1)
m0 = glm.nb(data=core,count~factor(month))
m1 = glm.nb(data=core,count~factor(month)+sky)
anova(m0,m1)
m0 = glm.nb(data=core,count~temp+rain)
m1 = glm.nb(data=core,count~temp+rain+sky)
anova(m0,m1)
summary(glm.nb(data=core,count~temp*rain*sky))
install.packages('RWordPress')
install.packages('RWordPress', repos = 'http://www.omegahat.org/R', type = 'source')
?markdown
install.packages('markdown')
install.packages('knitr')
library(RWordPress)
install.packages('RWordPress', repos = 'http://www.omegahat.org/R', type = 'source')
library(RWordPress)
install.packages('bitops')
install.packages('RWordPress', repos = 'http://www.omegahat.org/R', type = 'source')
library(RWordPress)
setwd("~/SSI/IGNOAA/scripts")
options(WordpressLogin = c(damoncrockett = 'Cerberus6921'),
WordpressURL = 'https://damoncrockett.wordpress.com')
library(knitr)
knit2wp('IGNOAA.Rmd', title = 'Analyzing Instagram and Weather Data')
options(WordpressLogin = c(damoncrockett = 'Cerberus6921'),
WordpressURL = 'https://damoncrockett.wordpress.com/xmlrpc.php')
library(knitr)
knit2wp('IGNOAA.Rmd', title = 'Analyzing Instagram and Weather Data')
qplot(core$count, binwidth=10)
ggplot(core, aes(temp,count)) +
geom_point(alpha=0.2) +
stat_smooth(method=loess) +
ylab('Average Hourly Instagram Post Count') +
xlab('Temperature in Degrees Fahrenheit')
ggplot(core, aes(factor(hour), temp)) + geom_boxplot() +
ylab('Average Temperature in Degrees Fahrenheit') +
xlab('Hour')
ggplot(core, aes(factor(hour), count)) + geom_boxplot() +
ylab('Average Hourly Instagram Post Count') +
xlab('Hour')
ggplot(core, aes(factor(date), count)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Range of Hourly Instagram Post Counts') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1), color='white', se=F)
ggplot(core, aes(factor(date), temp)) +
geom_path(aes(color=factor(month))) +
xlab('Date') +
ylab('Temperature in Degrees Fahrenheit') +
scale_color_discrete(name='Month') +
stat_smooth(aes(group=1), color='white', se=F)
ggplot(data=by.waking, aes(x=temp, y=count, group=waking, color=waking)) +
stat_smooth()
ggplot(data=by.month, aes(x=temp, y=count, group=factor(month), color=factor(month))) +
stat_smooth(se=F,method=lm)
summary(glm.nb(data=core, count~precipitation))
ggplot(core, aes(precipitation,count)) +
geom_point(alpha=0.2) +
stat_smooth()
ggplot(data=by.rain, aes(x=rain, y=count, group=waking, color=waking)) +
geom_line()
ggplot(data=by.weekday, aes(x=rain, y=count, group=factor(weekday), color=factor(weekday))) +
geom_line()
summary(glm.nb(data=core, count~factor(sky)))
ggplot(core, aes(factor(sky),count)) +
geom_boxplot() +
ylab('Average Hourly Instagram Post Count') +
xlab('Proportion of Sky Covered by Clouds')
ggplot(data=by.sky, aes(x=sky, y=count, group=daylight, color=daylight)) +
stat_smooth(method=lm,se=F)
ggplot(data=by.sky, aes(x=sky, y=count, group=daylight, color=daylight)) +
stat_smooth(method=lm,se=F)
ggplot(data=by.sky, aes(x=sky, y=count, group=daylight, color=daylight)) +
stat_smooth(method=lm,se=F)
str(core)
by.sky = ddply(core, c('sky','daylight'), summarize,
count = mean(count))
ggplot(data=by.sky, aes(x=sky, y=count, group=daylight, color=daylight)) +
stat_smooth(method=lm,se=F)
ggplot(data=by.sky, aes(x=sky, y=mean, group=factor(month), color=factor(month))) +
stat_smooth(method=lm,se=F)
by.sky = ddply(core, c('sky','month'), summarize,
mean = mean(count))
ggplot(data=by.sky, aes(x=sky, y=mean, group=factor(month), color=factor(month))) +
stat_smooth(method=lm,se=F)
by.sky = ddply(core, c('sky','weekday'), summarize,
count = mean(count))
ggplot(data=by.sky, aes(x=sky, y=count, group=factor(weekday), color=factor(weekday))) +
stat_smooth(method=lm,se=F)
